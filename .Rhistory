shiny_subset = dataset %>%
filter(SHINY == "YES")
non_shiny_subset = dataset %>%
filter(SHINY == "NO")
nr_of_shinies = nrow(shiny_subset) #124 shiny stickers
nr_of_nonshinies = nrow(non_shiny_subset) #616 non-shiny stickers
decimal_collection = 250 / full_collection
percentage_of_collection = percent(decimal_collection , accuracy = .01)
percentage_of_collection
expected_shinies = ceiling(decimal_collection * nr_of_shinies)
expected_shinies #42
expected_nonshinies = ceiling(decimal_collection * nr_of_nonshinies)
expected_nonshinies #209
min_shinies = expected_shinies - floor(expected_shinies * 0.2)
min_shinies #34
max_shinies = expected_shinies + floor(expected_shinies * 0.2)
max_shinies #50
#The rate of the shinies I pulled will be considered normal if I have pulled between 34 and 50 shiny stickers.
shinies_pulled = shiny_subset %>%
filter(TIMES.PULLED != 0)
nr_of_shinies_pulled = nrow(shinies_pulled)
nr_of_shinies_pulled #43
shinyplot <- c(min_shinies,expected_shinies,max_shinies)
shinyplot <- data.frame(shinyplot)
plot(shinyplot, type="b", main="Interval of Expected Nr. of Shinies Pulled") #h
mtext("Min Expected", side = 1, adj = 0, padj = -2)
mtext("Max Expected", side = 1, adj = 1, padj = -2)
mtext("Expected", side = 1, padj = -5)
shinyplot2 <- c(min_shinies,expected_shinies,nr_of_shinies_pulled,max_shinies)
shinyplot2 <- data.frame(shinyplot2)
plot(shinyplot2, type="b", main="Interval of Expected Nr. of Shinies Pulled") #h
mtext("34", side = 1, adj = 0, padj = -2)
mtext("50", side = 1, adj = 1, padj = -2)
mtext("42", side = 1, padj = -2)
mtext("Pulled", side = 1, adj = 0.58,  padj = -5, col = "Red")
mtext("43", side = 1, adj = 0.58,  padj = -2, col = "Red")
just_players = dataset %>%
filter(TYPE == "PLAYER") %>%
select (TYPE, NAME, TEAM, NATION)
just_players
no_of_players = nrow(just_players)
no_of_players #440 serie a players
players_pulled = just_players %>%
filter(TIMES.PULLED != 0)
players_pulled
no_of_players_pulled = nrow(players_pulled)
no_of_players_pulled  #126 serie a players pulled
expected_no_of_players_pulled = ceiling(no_of_players * decimal_collection)
expected_no_of_players_pulled #149 serie a players expected pulled
min_players_pulled = expected_no_of_players_pulled - floor(expected_no_of_players_pulled * 0.2)
min_players_pulled #120
max_players_pulled = expected_no_of_players_pulled + floor(expected_no_of_players_pulled * 0.2)
max_players_pulled #178
shinyplot3 <- c(min_players_pulled,no_of_players_pulled,expected_no_of_players_pulled,max_players_pulled)
shinyplot3 <- data.frame(shinyplot3)
plot(shinyplot3, type="b", main="Interval of Expected Nr. of Serie A Players Pulled") #h
mtext("120", side = 1, adj = 0, padj = -2)
mtext("178", side = 1, adj = 1, padj = -2)
mtext("149", side = 1, padj = -2)
mtext("Pulled", side = 1, adj = 0.1,  padj = -5, col = "Red")
mtext("126", side = 1, adj = 0.1,  padj = -2, col = "Red")
shinyplot3
stickers_by_team = dataset %>%
filter(TEAM != "ND") %>%
count(TEAM, sort = TRUE)
stickers_by_team
library(scales)
library(tibble)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
dataset = read.csv("DataScienceProjectDataset.csv")
as_tibble(dataset)
full_collection = nrow(dataset) #740 stickers
#q1
shiny_subset = dataset %>%
filter(SHINY == "YES")
non_shiny_subset = dataset %>%
filter(SHINY == "NO")
nr_of_shinies = nrow(shiny_subset) #124 shiny stickers
nr_of_nonshinies = nrow(non_shiny_subset) #616 non-shiny stickers
decimal_collection = 250 / full_collection
percentage_of_collection = percent(decimal_collection , accuracy = .01)
percentage_of_collection
expected_shinies = ceiling(decimal_collection * nr_of_shinies)
expected_shinies #42
expected_nonshinies = ceiling(decimal_collection * nr_of_nonshinies)
expected_nonshinies #209
min_shinies = expected_shinies - floor(expected_shinies * 0.2)
min_shinies #34
max_shinies = expected_shinies + floor(expected_shinies * 0.2)
max_shinies #50
#The rate of the shinies I pulled will be considered normal if I have pulled between 34 and 50 shiny stickers.
shinies_pulled = shiny_subset %>%
filter(TIMES.PULLED != 0)
nr_of_shinies_pulled = nrow(shinies_pulled)
nr_of_shinies_pulled #43
shinyplot <- c(min_shinies,expected_shinies,max_shinies)
shinyplot <- data.frame(shinyplot)
plot(shinyplot, type="b", main="Interval of Expected Nr. of Shinies Pulled") #h
mtext("Min Expected", side = 1, adj = 0, padj = -2)
mtext("Max Expected", side = 1, adj = 1, padj = -2)
mtext("Expected", side = 1, padj = -5)
shinyplot2 <- c(min_shinies,expected_shinies,nr_of_shinies_pulled,max_shinies)
shinyplot2 <- data.frame(shinyplot2)
plot(shinyplot2, type="b", main="Interval of Expected Nr. of Shinies Pulled") #h
mtext("34", side = 1, adj = 0, padj = -2)
mtext("50", side = 1, adj = 1, padj = -2)
mtext("42", side = 1, padj = -2)
mtext("Pulled", side = 1, adj = 0.58,  padj = -5, col = "Red")
mtext("43", side = 1, adj = 0.58,  padj = -2, col = "Red")
just_players = dataset %>%
filter(TYPE == "PLAYER") %>%
select (TYPE, NAME, TEAM, NATION)
just_players
no_of_players = nrow(just_players)
no_of_players #440 serie a players
players_pulled = just_players %>%
filter(TIMES.PULLED != 0)
players_pulled
no_of_players_pulled = nrow(players_pulled)
no_of_players_pulled  #126 serie a players pulled
expected_no_of_players_pulled = ceiling(no_of_players * decimal_collection)
expected_no_of_players_pulled #149 serie a players expected pulled
min_players_pulled = expected_no_of_players_pulled - floor(expected_no_of_players_pulled * 0.2)
min_players_pulled #120
max_players_pulled = expected_no_of_players_pulled + floor(expected_no_of_players_pulled * 0.2)
max_players_pulled #178
shinyplot3 <- c(min_players_pulled,no_of_players_pulled,expected_no_of_players_pulled,max_players_pulled)
shinyplot3 <- data.frame(shinyplot3)
plot(shinyplot3, type="b", main="Interval of Expected Nr. of Serie A Players Pulled") #h
mtext("120", side = 1, adj = 0, padj = -2)
mtext("178", side = 1, adj = 1, padj = -2)
mtext("149", side = 1, padj = -2)
mtext("Pulled", side = 1, adj = 0.1,  padj = -5, col = "Red")
mtext("126", side = 1, adj = 0.1,  padj = -2, col = "Red")
#q2
stickers_by_team = dataset %>%
filter(TEAM != "ND") %>%
count(TEAM, sort = TRUE)
stickers_by_team
stickers_by_team2 = stickers_by_team %>%
mutate(expected = ceiling(n * decimal_collection)) %>%
mutate(min_expected = ifelse(expected <= 5,expected - 1 - floor(expected * 0.2),expected - floor(expected * 0.2)))%>%
mutate(max_expected = ifelse(expected <= 5,expected + 1 + floor(expected * 0.2),expected + floor(expected * 0.2)))%>%
select(TEAM, min_expected, expected, max_expected) %>%
arrange(TEAM)
stickers_by_team2 #FOR THIS ONE MENTION THAT -+1 (SO IT DOESNT HAVE EXPECTED=MIN=MAX)
pulled_by_team = dataset %>%
filter(TEAM != "ND") %>%
count(TEAM, TIMES.PULLED, sort = TRUE) %>%
mutate(SUM_BY_TEAM = TIMES.PULLED * n) %>%
group_by(TEAM)%>%
summarise(SUM_BY_TEAM = sum(SUM_BY_TEAM)) %>%
arrange(desc(SUM_BY_TEAM))
pulled_by_team
team_join
nationalities_of_players = just_players %>%
count(NATION, sort = TRUE)
nationalities_of_players
library(scales)
library(tibble)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
dataset = read.csv("DataScienceProjectDataset.csv")
as_tibble(dataset)
full_collection = nrow(dataset) #740 stickers
#q1
shiny_subset = dataset %>%
filter(SHINY == "YES")
non_shiny_subset = dataset %>%
filter(SHINY == "NO")
nr_of_shinies = nrow(shiny_subset) #124 shiny stickers
nr_of_nonshinies = nrow(non_shiny_subset) #616 non-shiny stickers
decimal_collection = 250 / full_collection
percentage_of_collection = percent(decimal_collection , accuracy = .01)
percentage_of_collection
expected_shinies = ceiling(decimal_collection * nr_of_shinies)
expected_shinies #42
expected_nonshinies = ceiling(decimal_collection * nr_of_nonshinies)
expected_nonshinies #209
min_shinies = expected_shinies - floor(expected_shinies * 0.2)
min_shinies #34
max_shinies = expected_shinies + floor(expected_shinies * 0.2)
max_shinies #50
#The rate of the shinies I pulled will be considered normal if I have pulled between 34 and 50 shiny stickers.
shinies_pulled = shiny_subset %>%
filter(TIMES.PULLED != 0)
nr_of_shinies_pulled = nrow(shinies_pulled)
nr_of_shinies_pulled #43
shinyplot <- c(min_shinies,expected_shinies,max_shinies)
shinyplot <- data.frame(shinyplot)
plot(shinyplot, type="b", main="Interval of Expected Nr. of Shinies Pulled") #h
mtext("Min Expected", side = 1, adj = 0, padj = -2)
mtext("Max Expected", side = 1, adj = 1, padj = -2)
mtext("Expected", side = 1, padj = -5)
shinyplot2 <- c(min_shinies,expected_shinies,nr_of_shinies_pulled,max_shinies)
shinyplot2 <- data.frame(shinyplot2)
plot(shinyplot2, type="b", main="Interval of Expected Nr. of Shinies Pulled") #h
mtext("34", side = 1, adj = 0, padj = -2)
mtext("50", side = 1, adj = 1, padj = -2)
mtext("42", side = 1, padj = -2)
mtext("Pulled", side = 1, adj = 0.58,  padj = -5, col = "Red")
mtext("43", side = 1, adj = 0.58,  padj = -2, col = "Red")
just_players = dataset %>%
filter(TYPE == "PLAYER") %>%
select (TYPE, NAME, TEAM, NATION)
just_players
no_of_players = nrow(just_players)
no_of_players #440 serie a players
players_pulled = just_players %>%
filter(TIMES.PULLED != 0)
players_pulled
no_of_players_pulled = nrow(players_pulled)
no_of_players_pulled  #126 serie a players pulled
expected_no_of_players_pulled = ceiling(no_of_players * decimal_collection)
expected_no_of_players_pulled #149 serie a players expected pulled
min_players_pulled = expected_no_of_players_pulled - floor(expected_no_of_players_pulled * 0.2)
min_players_pulled #120
max_players_pulled = expected_no_of_players_pulled + floor(expected_no_of_players_pulled * 0.2)
max_players_pulled #178
shinyplot3 <- c(min_players_pulled,no_of_players_pulled,expected_no_of_players_pulled,max_players_pulled)
shinyplot3 <- data.frame(shinyplot3)
plot(shinyplot3, type="b", main="Interval of Expected Nr. of Serie A Players Pulled") #h
mtext("120", side = 1, adj = 0, padj = -2)
mtext("178", side = 1, adj = 1, padj = -2)
mtext("149", side = 1, padj = -2)
mtext("Pulled", side = 1, adj = 0.1,  padj = -5, col = "Red")
mtext("126", side = 1, adj = 0.1,  padj = -2, col = "Red")
#q2
stickers_by_team = dataset %>%
filter(TEAM != "ND") %>%
count(TEAM, sort = TRUE)
stickers_by_team
stickers_by_team2 = stickers_by_team %>%
mutate(expected = ceiling(n * decimal_collection)) %>%
mutate(min_expected = ifelse(expected <= 5,expected - 1 - floor(expected * 0.2),expected - floor(expected * 0.2)))%>%
mutate(max_expected = ifelse(expected <= 5,expected + 1 + floor(expected * 0.2),expected + floor(expected * 0.2)))%>%
select(TEAM, min_expected, expected, max_expected) %>%
arrange(TEAM)
stickers_by_team2 #FOR THIS ONE MENTION THAT -+1 (SO IT DOESNT HAVE EXPECTED=MIN=MAX)
pulled_by_team = dataset %>%
filter(TEAM != "ND") %>%
count(TEAM, TIMES.PULLED, sort = TRUE) %>%
mutate(SUM_BY_TEAM = TIMES.PULLED * n) %>%
group_by(TEAM)%>%
summarise(SUM_BY_TEAM = sum(SUM_BY_TEAM)) %>%
arrange(desc(SUM_BY_TEAM))
pulled_by_team
team_join = inner_join(stickers_by_team2,pulled_by_team)
ggplot(team_join, aes(x=TEAM, y=SUM_BY_TEAM)) +
geom_bar(stat = "identity") +
coord_flip() + theme(text = element_text(size = 5)) +
geom_line(aes(x = TEAM, y = min_expected), size = 0.5, color="orange", group = 1) +
geom_line(aes(x = TEAM, y = max_expected), size = 0.5, color="red", group = 1)
#q3
nationalities_of_players = just_players %>%
count(NATION, sort = TRUE)
nationalities_of_players
at_least_five = nationalities_of_players %>%
filter(n >= 5)
at_least_five
stickers_by_nation = at_least_five %>%
mutate(expected_nation = ceiling(n * decimal_collection)) %>%
mutate(min_expected_nation = ifelse(expected_nation <= 5,expected_nation - 1 - floor(expected_nation * 0.2),expected_nation - floor(expected_nation * 0.2)))%>%
mutate(max_expected_nation = ifelse(expected_nation <= 5,expected_nation + 1 + floor(expected_nation * 0.2),expected_nation + floor(expected_nation * 0.2)))%>%
select(NATION, min_expected_nation, expected_nation, max_expected_nation) %>%
arrange(NATION)
stickers_by_nation
pulled_by_nation = dataset %>%
filter(TEAM != "ND") %>%
filter(NATION != "ND") %>%
count(NATION, TIMES.PULLED, sort = TRUE) %>%
mutate(SUM_BY_NATION = TIMES.PULLED * n) %>%
group_by(NATION)%>%
summarise(SUM_BY_NATION = sum(SUM_BY_NATION)) %>%
arrange(desc(SUM_BY_NATION))
pulled_by_nation
nation_join = inner_join(stickers_by_nation,pulled_by_nation)
nation_join #should be nation, sum, min, max, expected
ggplot(nation_join, aes(x=NATION, y=SUM_BY_NATION)) +
geom_bar(stat = "identity") +
coord_flip() + theme(text = element_text(size = 5)) +
geom_line(aes(x = NATION, y = min_expected_nation), size = 0.5, color="orange", group = 1) +
geom_line(aes(x = NATION, y = max_expected_nation), size = 0.5, color="red", group = 1)
ita_foreigner_table
---
title: "Data Science Project Presentation"
author: "Bruno Brandão 161104"
date: '2022-05-11'
output: ioslides_presentation
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
# Calciatori 2021-2022 Sticker Collection Data Analysis
## Background - Why I analysed a sticker collection?
I'm Bruno, a Portuguese Erasmus student and I have always collected
football stickers since I remember. Every two years I do the figurine
collections from the Euros and the World Cups. Since I'm doing Erasmus
in Italy and since Panini (the distributor of the collections) is
Italian I decided to start the collection and because I was quite
certain I wouldn't see my country qualifying for the World Cup this
December I decider I was better off with collecting the Calciatori
2021-2022 Sticker Collection.
## Background - Why I analysed a sticker collection?
However, I haven't answered the question above. Why did I **analyse** a
sticker collection?
Just two reasons!
1. In my first packet, the first sticker I saw was the
Udinese Crest, what are the odds of that? Well, it's obviously 1 over
how many stickers there are, right? It makes sense, it could be but
throughout all my years collecting stickers I have thought many times
"No way this is **just** probability" Well, about time I can analyse
some of my doubts.
1. Because I had this project, obviously!
## What am I analyzing?
I have 3 questions I want to answer in this project
1.  Are shiny stickers rarer than non-shiny stickers?
1.  Some collectors treat shiny stickers as rarer than non-shiny
stickers and value them more in trades, is this true?
1.  Are the packets weighted for each region/city?
1.  In past collections, I had the page for Portugal mostly full while
others were mostly empty, is this probability or something else?
1.  Are Italian players more likely to be in packets?
1.  In the same thought as the previous question, we could have Italian
players be more likely to come out of packets.
## Base of this project
-   The Dataset only has stickers that could be pulled in the base
packets (some stickers only come in special releases)
-   The collection contains stickers with "letter variants" (for
example, sticker 667 has 3 stickers in it, sticker 667a, 667b, 667c).
These stickers will be counted as one.
-   The analysis will be surrounded on 250 stickers I pulled from
packets only bought in Udine (in order not to mess with Question 2)
-   To consider a group of stickers more probable, I will count 20% of
variance from the expected pull-off rate
## The Dataset
The Dataset contains 7 columns and a line for each sticker:
-   **Number** - Number of the sticker on the collection (even if the sticker is special and contains letters)
-   **Times Pulled** - Number of times I pulled a certain sticker off packets
-   **Type** - Type of the sticker, if it's a special sticker, a player, manager, crest, etc.
-   **Shiny** - Tells if the sticker is shiny or not
-   **Team** - The team associated with this sticker (marked as ND if none)
-   **Nation** - The nation of the person (player or manager) of this sticker (stickers with multiple players don't count and are marked as ND, as it is for any other sticker without nationality)
-   **Name** - Name of the sticker
## The Dataset
Before exploring the dataset we have to import the dataset:
```{r}
dataset = read.csv("DataScienceProjectDataset.csv")
as_tibble(dataset)
```
## Question 1 - Are shiny stickers rarer than non-shiny stickers?
To understand if shiny stickers are rarer than non-shiny stickers have first of all know how many stickers are shiny and what's the proportion to non-shiny stickers.
![Shiny Sticker](shiny.png)
![Shiny Sticker](nonshiny.png)
## Question 1 - Are shiny stickers rarer than non-shiny stickers?
To answer this question we have to **filter** our main dataset into two sub-datasets, one only with shinies and one only with non-shinies.
```
shiny_subset = dataset %>%
filter(SHINY == "YES")
non_shiny_subset = dataset %>%
filter(SHINY == "NO")
```
## Question 1 - Are shiny stickers rarer than non-shiny stickers?
There we will do something we'll use throughout the project: **decimal_collection** which is the percentage of stickers I have assuming non-doubles, in decimal form. It will be a constant used to expectate how many stickers of a certain category I should have pulled-off.
This constant will be: 0.3378378 (or 33.78%)
## Question 1 - Are shiny stickers rarer than non-shiny stickers?
With this constant we calculate the expected number of shinies and non-shiny stickers I should've pulled out of packets.
```
expected_shinies = ceiling(decimal_collection * nr_of_shinies) #42
expected_nonshinies = ceiling(decimal_collection * nr_of_nonshinies) #209
```
## Question 1 - Are shiny stickers rarer than non-shiny stickers?
To really answer the question I have to estimate the acceptable variation off the expected value because we know probability isn't certain (The 20% mentioned earlier)
```
min_shinies = expected_shinies - floor(expected_shinies * 0.2) #34
max_shinies = expected_shinies + floor(expected_shinies * 0.2) #50
```
The number of shinies I pulled will be considered normal if I have pulled between 34 and 50 shinies
## Question 1 - Are shiny stickers rarer than non-shiny stickers?
Now we count how many shinies I pulled-off.
```
shinies_pulled = shiny_subset %>%
filter(TIMES.PULLED != 0)
nr_of_shinies_pulled = nrow(shinies_pulled) #43
```
## Question 1 - Are shiny stickers rarer than non-shiny stickers?
So I pulled 43 shinies, the expected values were between 34 and 50 shinies, confirming that shinies are **NOT** rarer than any other figuirine.
```{r}
shinyplot <- c(min_shinies,expected_shinies,max_shinies)
shinyplot <- data.frame(shinyplot)
plot(shinyplot, type="b", main="Interval of Expected Nr. of Shinies Pulled")
mtext("Min Expected", side = 1, adj = 0, padj = -2)
mtext("Max Expected", side = 1, adj = 1, padj = -2)
mtext("Expected", side = 1, padj = -5)
shinyplot2 <- c(min_shinies,expected_shinies,nr_of_shinies_pulled,max_shinies)
shinyplot2 <- data.frame(shinyplot2)
plot(shinyplot2, type="b", main="Interval of Expected Nr. of Shinies Pulled")
mtext("34", side = 1, adj = 0, padj = -2)
mtext("50", side = 1, adj = 1, padj = -2)
mtext("42", side = 1, padj = -2)
mtext("Pulled", side = 1, adj = 0.58,  padj = -5, col = "Red")
mtext("43", side = 1, adj = 0.58,  padj = -2, col = "Red")
```
## Question 2 - Are the packets weighted for each region/city?
To answer this question, I will first filter stickers associated with a team (having attribute TEAM different of Not Defined)
```
stickers_by_team = dataset %>%
filter(TEAM != "ND") %>%
count(TEAM, sort = TRUE)
```
## Question 2 - Are the packets weighted for each region/city?
Then I calculate the expected stickers pulled by team and respective minimum and maximum expected.
For this one I subtracted 1 to the minimum expected and added 1 to maximum expected for teams with expected stickers pulled of 5 of less, so I don't have cases where the minimum and maximum expected is the same, and having pulled a different number of stickers of that team would be considered abnormal.
I proceeded by also counting how many stickers I had pulled form each team.
## Question 2 - Are the packets weighted for each region/city?
```
stickers_by_team = dataset %>%
filter(TEAM != "ND") %>%
count(TEAM, sort = TRUE)
stickers_by_team2 = stickers_by_team %>%
mutate(expected = ceiling(n * decimal_collection)) %>%
mutate(min_expected = ifelse(expected <= 5,expected - 1 - floor(expected * 0.2),expected - floor(expected * 0.2)))%>%
mutate(max_expected = ifelse(expected <= 5,expected + 1 + floor(expected * 0.2),expected + floor(expected * 0.2)))%>%
select(TEAM, min_expected, expected, max_expected) %>%
arrange(TEAM)
pulled_by_team = dataset %>%
filter(TEAM != "ND") %>%
count(TEAM, TIMES.PULLED, sort = TRUE) %>%
mutate(SUM_BY_TEAM = TIMES.PULLED * n) %>%
group_by(TEAM)%>%
summarise(SUM_BY_TEAM = sum(SUM_BY_TEAM)) %>%
arrange(desc(SUM_BY_TEAM))
```
## Question 2 - Are the packets weighted for each region/city?
Now I have a full table I can analyse but I have also done a graph.
The bars are the stickers I pulled for each team, orange line the minimum number of stickers I hould pull to be considered normal, and the red line is exactly the sam but for the maximum value.
```{r}
ggplot(team_join, aes(x=TEAM, y=SUM_BY_TEAM)) +
geom_bar(stat = "identity") +
coord_flip() + theme(text = element_text(size = 5)) +
geom_line(aes(x = TEAM, y = min_expected), size = 0.5, color="orange", group = 1) +
geom_line(aes(x = TEAM, y = max_expected), size = 0.5, color="red", group = 1)
```
## Question 2 - Are the packets weighted for each region/city?
To answer the question, packets are **NOT** weighted for the city of purchase.
After this experiment we can conclude that 20% isn't much since many teams are outside of the "normal" interval.
The teams are: Atalanta, Benevento, Brescia, Cagliari, Genoa, Inter, Juventus, L.R. Vicenza, Pisa, Sassuolo, SPAL and Spezia.
Pordenone and Udinese had "normal" pull-off rate.
## Question 3 - Are Italian players more likely to be in packets?
For this final question I started by counting how many stickers each nationality had in the Serie A (not counting Serie B because of the triple-stickers mentioned prviously)
```
nationalities_of_players = just_players %>%
count(NATION, sort = TRUE)
```
## Question 3 - Are Italian players more likely to be in packets?
Although we are going to answer if Italian players are more likely to be in packets than foreigner players, we will do this first for each nationality with at least 5 players in the collection (to avoid the extreme cases, similar to what I did with the teams)
This excludes 37 nationalities and let's us study the top 23 nationalities. The discarded nationalities will come back once I make a comparision between Italians and Foreigners
## Question 3 - Are Italian players more likely to be in packets?
Like previously done with teams, now I'll calculate the expected number of stickers pulled for each nationality and respective minimum and maximum number. I will also calculate the number of stickers I pulled for each nation aswell.
## Question 3 - Are Italian players more likely to be in packets?
```
stickers_by_nation = at_least_five %>%
mutate(expected_nation = ceiling(n * decimal_collection)) %>%
mutate(min_expected_nation = ifelse(expected_nation <= 5,expected_nation - 1 - floor(expected_nation * 0.2),expected_nation - floor(expected_nation * 0.2)))%>%
mutate(max_expected_nation = ifelse(expected_nation <= 5,expected_nation + 1 + floor(expected_nation * 0.2),expected_nation + floor(expected_nation * 0.2)))%>%
select(NATION, min_expected_nation, expected_nation, max_expected_nation) %>%
arrange(NATION)
pulled_by_nation = dataset %>%
filter(TEAM != "ND") %>%
filter(NATION != "ND") %>%
count(NATION, TIMES.PULLED, sort = TRUE) %>%
mutate(SUM_BY_NATION = TIMES.PULLED * n) %>%
group_by(NATION)%>%
summarise(SUM_BY_NATION = sum(SUM_BY_NATION)) %>%
arrange(desc(SUM_BY_NATION))
nation_join = inner_join(stickers_by_nation,pulled_by_nation)
```
## Question 3 - Are Italian players more likely to be in packets?
Just like before I did a graph to better ilustrate the values. The bars and colored lines represent the same as before (stickers pulled for the bars, minimum expected number of stickers pulled for the orange line and maximum expected number of stickers pulled for the red line)
```{r}
ggplot(nation_join, aes(x=NATION, y=SUM_BY_NATION)) +
geom_bar(stat = "identity") +
coord_flip() + theme(text = element_text(size = 5)) +
geom_line(aes(x = NATION, y = min_expected_nation), size = 0.5, color="orange", group = 1) +
geom_line(aes(x = NATION, y = max_expected_nation), size = 0.5, color="red", group = 1)
```
## Question 3 - Are Italian players more likely to be in packets?
As for the question, italian players are **NOT** more likely to be pulled off packets.
But as has happenned previously, 20% interval wasn't enough and some nation had "abnormal pullout rates"
These nations (with at least 5 stickers in the collection) were: Argentina, Belgium, Brazil, Croatia, Portugal and Slovenia.
## Question 3 - Are Italian players more likely to be in packets?
I also wanted to compare Italian Players with Foreigner players (just to not leave many nations out)
```{r}
ita_foreigner_table
```
It can see there wasn't a difference.
##Conclusions and Final Comments.
With this project I confirmed that at least for me the packets weren't weighted for the shiny-rate, a specific team or a specific nation.
Even though I just answered all questions I initially asked I can't confirm my answers for some reasons:
*We can obiously study many more variables
*The 20% interval I used seemed to be a low interval margin (although it seemed adequate for the ammount of stickers in the database)
##Conclusions and Final Comments.
This study could be improved with:
*Finding oddities in the dataset and testing them to see if they are true.
*Having more stickers to work around, instead of "just" 250 stickers (34% of the total collection), we would be better in having way more stickers than the full collection (I would say 10 times the collection = 7400 stickers) but that would be way more than 1000€!
*With more stickers to work I could've reduced the error interval from the 20%
#Thanks for the attention!
